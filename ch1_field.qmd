---
title: "Ch 1 - The Field"
jupyter: julia-1.9
---

## Complex Numbers

```{julia setup}
using Plots
```

$${\bf i}^2 = -1$$

For any positive number, *b*, the solution to $x^2 = -b$ is $\sqrt{b}*{\bf i}$

We can represent imaginary numbers in Julia with `im`

```{julia}
3im
```

```{julia}
1 + 2im
```


```{julia}
1 + 2im * 3
```

And you can extract the real and imaginary parts like we'd expect:

```{julia}
real(1 + 2im)
```

```{julia}
imag(1 + 2im)
```

### Abstracting over Fields

Julia defines mathematical operations that work on real and complex numbers. So the following function works regardless of the input we give it (well, not completely regardless)

```{julia}
my_solve(a, b, c) = (c - b) / a
```

```{julia}
my_solve(10, 5, 30)
```

```{julia}
my_solve(10 + 5im, 5, 30)
```

This is important bc it means much of linear algebra will work for real numbers as well as complex numbers.

### Playing with Complex Numbers

Typically, complex numbers are plotted on the complex plane. `Plots` will separate out the real and complex numbers for us:

```{julia}
S = [2 + 2im, 3 + 2im, 1.75 + 1im, 2 + 1im, 2.25 + 1im, 2.5 + 1im, 3 + 1im]

scatter(S)
```

The absolute value of a complex number is the distance to the point on the complex plane (think Pythagorean theorem)

```{julia}
abs(S[1])
```

The conjugate of a complex number, *z*, written $\bar{z}$, is z.real - z.imaginary

```{julia}
conj(S[1])
```

We can add complex numbers to other complex numbers (we need to broadcast the operation)

```{julia}
a = 1 + 2im

S₂ = S .+ a
```

```{julia}
scatter(S₂)
```

**Problem 1.4.5**

Assume we have 2 distinct points, z1 and z2. Show that there's a translation mapping z1 and z2, a translation mapping z2 to z1, and no translation mappng both z1 to z2 and z2 to z1

```{julia}
z1 = S[1]
z2 = S[2]

#move z1 to z2
x1 = z2 - z1

#move z2 to z1
x2 = z1 - z2

#compare these results

x1 == x2
```